@page "/history"
@inject IBattleService BattleService
@inject IAuthService AuthService
<h1>History</h1>

<h3 class="mt-4">Statistics</h3>
<div class="container-fluid">
    <div class="row">
        <div class="col-12 col-md-3 p-0">
            <table class="table table-sm text-center">
                <thead>
                    <tr>
                        <th>Fights</th>
                        <th>Wins</th>
                        <th>Defeats</th>
                        <th>WD ratio</th>
                    </tr>
                </thead>
                <tbody class="table-secondary font-weight-bold">
                    <tr>
                        <td>@Fights</td>
                        <td>@Wins</td>
                        <td>@Defeats</td>
                        <td>@Ratio</td>
                    </tr>
                </tbody>
            </table>
        </div>
    </div>
</div>

<h3 class="mt-4">History list</h3>
<table class="table">
    <thead>
        <tr>
            <th class="d-none d-sm-table-cell"></th>
            <th class="pl-1">Opponent</th>
            <th>Rounds</th>
            <th>Damage</th>
            <th class="pr-1">Date</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in BattleService.History)
        {
            <tr style="@GetHistoryStyle(item)">
                <td class="d-none d-sm-table-cell">@(item.YouWon ? "You Won!" : "You Lost!")</td>
                <td class="pl-1">@item.OpponentName</td>
                <td>@item.RoundsFought</td>
                <td>@item.WinnerDamageDealt</td>
                <td class="pr-1">@item.BattleDate</td>

            </tr>
        }
    </tbody>
</table>

@code {
    public int Fights { get; set; } = 0;
    public int Wins { get; set; } = 0;
    public int Defeats { get; set; } = 0;
    public double Ratio { get; set; } = 0;

    protected override async Task OnInitializedAsync()
    {
        await BattleService.GetHistory();
        GetFightsCount();
        await BattleService.LastLoginUpdate();
    }

    void GetFightsCount()
    {
        Fights = BattleService.History.Count();
        Wins = BattleService.History.Where(x => x.YouWon).Count();
        Defeats = BattleService.History.Where(x => !x.YouWon).Count();
        Ratio = Math.Round(((double)Wins / Defeats),2);
    }

    string GetHistoryStyle(BattleHistoryEntry entry)
    {
        if (entry.YouWon) return "color: green; font-weight: 600";
        else return "color:red";
    }
}
