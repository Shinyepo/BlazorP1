@page "/BattleLog"
@inject IBattleService BattleService

<h1>Battle Result</h1>

@if (BattleService.LastBattle != null)
{
    <h3 class="mt-4">Statistics</h3>
<div class="container-fluid">
    <div class="row">
        <div class="col-12 col-md-4 p-0">
            <table class="table table-sm text-center">
                <thead>
                    <tr>
                        <th>Result</th>
                        <th>Killed</th>
                        <th>Died</th>
                        <th>Damage</th>
                        <th>Rounds</th>
                    </tr>
                </thead>
                <tbody class="table-secondary font-weight-bold">
                    <tr>
                        <td>@(BattleService.LastBattle.IsVictory ? "YOU WON!" : "You lost")</td>
                        <td>@BattleService.LastBattle.OpponentKilledUnits</td>
                        <td>@BattleService.LastBattle.AttackerKilledUnits</td>
                        <td>@BattleService.LastBattle.AttackerDmgSum</td>
                        <td>@BattleService.LastBattle.RoundsFought</td>
                    </tr>
                </tbody>
            </table>
        </div>
    </div>
</div>
<h5>You were rewarded with @BattleService.LastBattle.Reward Bananas for this battle.</h5>
}

<h3 class="mt-4">Details</h3>
<ul class="list-group">
    @foreach (var item in BattleService.LastBattle.Log)
    {
        <li class="@getClass(item)">@((MarkupString)item)</li>
    }
</ul>

@code {
    protected override async Task OnInitializedAsync()
    {
        await BattleService.GetHistory();
    }
    string getClass(string round)
    {
        if (round.Contains("kills"))
            return "list-group-item list-group-item-danger";
        else
            return "list-group-item";
    }
}
