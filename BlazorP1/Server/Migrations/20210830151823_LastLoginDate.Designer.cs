// <auto-generated />
using System;
using BlazorP1.Server.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace BlazorP1.Server.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20210830151823_LastLoginDate")]
    partial class LastLoginDate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.9")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("BlazorP1.Shared.Battle", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AttackerId")
                        .HasColumnType("int");

                    b.Property<DateTime>("BattleDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("OpponentId")
                        .HasColumnType("int");

                    b.Property<int>("RoundsFought")
                        .HasColumnType("int");

                    b.Property<int>("WinnerDamage")
                        .HasColumnType("int");

                    b.Property<int>("WinnerId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AttackerId");

                    b.HasIndex("OpponentId");

                    b.HasIndex("WinnerId");

                    b.ToTable("Battles");
                });

            modelBuilder.Entity("BlazorP1.Shared.ProductionBuilding", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("BananaCostBase")
                        .HasColumnType("int");

                    b.Property<int>("BananaCostStep")
                        .HasColumnType("int");

                    b.Property<int>("BananaCountBase")
                        .HasColumnType("int");

                    b.Property<int>("BananaCountStep")
                        .HasColumnType("int");

                    b.Property<int>("BuildTimeBase")
                        .HasColumnType("int");

                    b.Property<int>("BuildTimeStep")
                        .HasColumnType("int");

                    b.Property<string>("BuildingName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("MaxLevel")
                        .HasColumnType("int");

                    b.Property<int>("TaskTimeBase")
                        .HasColumnType("int");

                    b.Property<int>("TaskTimeStep")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("ProductionBuildings");
                });

            modelBuilder.Entity("BlazorP1.Shared.Unit", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Attack")
                        .HasColumnType("int");

                    b.Property<int>("BananaCost")
                        .HasColumnType("int");

                    b.Property<int>("BuildingId")
                        .HasColumnType("int");

                    b.Property<int>("Defence")
                        .HasColumnType("int");

                    b.Property<int>("HitPoints")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Units");
                });

            modelBuilder.Entity("BlazorP1.Shared.UnitBuilding", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("BananaCostBase")
                        .HasColumnType("int");

                    b.Property<int>("BananaCostStep")
                        .HasColumnType("int");

                    b.Property<int>("BuildTimeBase")
                        .HasColumnType("int");

                    b.Property<int>("BuildTimeStep")
                        .HasColumnType("int");

                    b.Property<string>("BuildingName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("MaxLevel")
                        .HasColumnType("int");

                    b.Property<int>("TaskTimeBase")
                        .HasColumnType("int");

                    b.Property<int>("TaskTimeStep")
                        .HasColumnType("int");

                    b.Property<int>("UnitId")
                        .HasColumnType("int");

                    b.Property<int>("UnitLimitBase")
                        .HasColumnType("int");

                    b.Property<int>("UnitLimitStep")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UnitId")
                        .IsUnique();

                    b.ToTable("UnitBuildings");
                });

            modelBuilder.Entity("BlazorP1.Shared.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Bananas")
                        .HasColumnType("int");

                    b.Property<int>("Battles")
                        .HasColumnType("int");

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("datetime2");

                    b.Property<int>("Defeats")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("LastLogin")
                        .HasColumnType("datetime2");

                    b.Property<byte[]>("PasswordHash")
                        .HasColumnType("varbinary(max)");

                    b.Property<byte[]>("PasswordSalt")
                        .HasColumnType("varbinary(max)");

                    b.Property<DateTime>("RegistrationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Username")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Wins")
                        .HasColumnType("int");

                    b.Property<bool>("isConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool>("isDeleted")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("BlazorP1.Shared.UserBuilding", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("BuildFinishTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("BuildingId")
                        .HasColumnType("int");

                    b.Property<int>("BuildingLevel")
                        .HasColumnType("int");

                    b.Property<string>("BuildingType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<bool>("isFinished")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("UserBuildings");
                });

            modelBuilder.Entity("BlazorP1.Shared.UserBuildingTask", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("LastTaskEndTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("TaskEndTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("TaskType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserBuildingId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserBuildingId");

                    b.ToTable("UserBuildingTasks");
                });

            modelBuilder.Entity("BlazorP1.Shared.UserUnit", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("HitPoints")
                        .HasColumnType("int");

                    b.Property<int>("UnitId")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UnitId");

                    b.HasIndex("UserId");

                    b.ToTable("UserUnits");
                });

            modelBuilder.Entity("BlazorP1.Shared.UtilityBuilding", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("BananaCostBase")
                        .HasColumnType("int");

                    b.Property<int>("BananaCostStep")
                        .HasColumnType("int");

                    b.Property<int>("BonusAmountBase")
                        .HasColumnType("int");

                    b.Property<int>("BonusAmountStep")
                        .HasColumnType("int");

                    b.Property<string>("BonusType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("BuildTimeBase")
                        .HasColumnType("int");

                    b.Property<int>("BuildTimeStep")
                        .HasColumnType("int");

                    b.Property<string>("BuildingDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BuildingName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("MaxLevel")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("UtilityBuildings");
                });

            modelBuilder.Entity("BlazorP1.Shared.Battle", b =>
                {
                    b.HasOne("BlazorP1.Shared.User", "Attacker")
                        .WithMany()
                        .HasForeignKey("AttackerId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("BlazorP1.Shared.User", "Opponent")
                        .WithMany()
                        .HasForeignKey("OpponentId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("BlazorP1.Shared.User", "Winner")
                        .WithMany()
                        .HasForeignKey("WinnerId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Attacker");

                    b.Navigation("Opponent");

                    b.Navigation("Winner");
                });

            modelBuilder.Entity("BlazorP1.Shared.UnitBuilding", b =>
                {
                    b.HasOne("BlazorP1.Shared.Unit", "Unit")
                        .WithOne("UnitBuilding")
                        .HasForeignKey("BlazorP1.Shared.UnitBuilding", "UnitId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Unit");
                });

            modelBuilder.Entity("BlazorP1.Shared.UserBuildingTask", b =>
                {
                    b.HasOne("BlazorP1.Shared.UserBuilding", "UserBuilding")
                        .WithMany()
                        .HasForeignKey("UserBuildingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("UserBuilding");
                });

            modelBuilder.Entity("BlazorP1.Shared.UserUnit", b =>
                {
                    b.HasOne("BlazorP1.Shared.Unit", "Unit")
                        .WithMany()
                        .HasForeignKey("UnitId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BlazorP1.Shared.User", null)
                        .WithMany("Units")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Unit");
                });

            modelBuilder.Entity("BlazorP1.Shared.Unit", b =>
                {
                    b.Navigation("UnitBuilding");
                });

            modelBuilder.Entity("BlazorP1.Shared.User", b =>
                {
                    b.Navigation("Units");
                });
#pragma warning restore 612, 618
        }
    }
}
